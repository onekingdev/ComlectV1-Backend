- content_for :html_head do
  script src="https://maps.googleapis.com/maps/api/js?key=#{ENV.fetch('GOOGLE_PLACES_API_KEY')}&libraries=places"

= simple_form_for decorate(@specialist), url: update_specialist_path, wrapper: :inline_form, html: { class: 'form-specialist' } do |f|

  .text-danger.text-center
    b = f.object.errors.full_messages.first if f.object.errors.any?

  .row
    .col-md-3
      .panel.panel-default.fixedheight
        .panel-heading
          .pull-left
            h3 Picture
          .clearfix
        hr.m-b-0.m-t-1
        .panel-content-wrapper.text-center.p-y-1.p-x-1#logo
          label.custom-file-field.js-custom-file-field style="font-size: 18px;"
            = f.hidden_field :photo, value: f.object.photo_data? ? f.object.photo_data.to_json : nil
            = f.file_field :photo, accept: "image/gif, image/jpeg, image/png"
            - if f.object.photo
              = image_tag f.object.photo_url(:thumb), size: '162x162', style: "border-radius: 50%; margin-bottom: 10px;"
              = f.hidden_field :delete_photo, value: 0
              br
              i.icon-note.m-r-2
              i.icon-trash.delete-logo-button
            - else
              = image_tag "default_userpic.png", size: '162x162', style: "border-radius: 50%; margin-bottom: 10px;"
              .add-button
                i.icon-note
            .help-block.m-b-0
              small Must be jpg/jpeg/png/gif<br>Max file size 2MB
            span.selected.m-y-1.hidden= f.object.photo ? (f.object.photo.try(:[], :original) || f.object.photo).data['metadata']['filename'] : nil
            - if f.object.errors[:photo].any?
              .text-danger.m-b-1= f.object.errors[:photo].to_sentence
    .col-md-6.p-x-0
      .panel.panel-default
        .panel-heading.p-r-1
          .pull-left
            h3 Profile
          .pull-right.radio-pills-as-nav.p-l-2 style=" height: 20px; margin-top: -6px;"
            = f.input :automatching_available, as: :radio_pills, collection: [['Available', true], ['Unavailable', false]], btn_class: 'btn-shadow p-x-1 p-y-05 noshadow', hint: false, label: false
          .pull-right
            = f.submit "Save", class: "btn btn-primary btn-solid p-y-0", style: "margin-top: -6px;"
          .clearfix
        hr.m-b-0.m-t-1
        .panel-content-wrapper.fixedheight_receiver
          .col-sm-6 = f.input :first_name, required: true, input_html: { class: 'input-lg' }
          .col-sm-6 = f.input :last_name, required: true, input_html: { class: 'input-lg' }
          .col-sm-6
            = f.association :industries, required: true, collection: Industry.sorted.filtered, placeholder: t('simple_form.placeholders.specialist.industries'), input_html: { class: 'input-lg js-select', multiple: true }
          .col-sm-6
            = f.association :jurisdictions, required: true, collection: Jurisdiction.ordered_starting_from_usa, placeholder: t('simple_form.placeholders.specialist.jurisdictions'), input_html: { class: 'input-lg js-select', multiple: true }
          .col-sm-6
            = f.input :address_1,
              required: true,
              input_html: { \
                class: 'input-lg js-place-autocomplete', \
                data: { zipcode: '#specialist_zipcode', country: '#specialist_country', state: '#specialist_state', city: '#specialist_city', lat: '#specialist_lat', lng: '#specialist_lng' } \
              }
          .col-sm-6 = f.input :address_2, required: false, input_html: { class: 'input-lg' }
          .col-sm-6
            = f.input :city, required: true, as: :string, input_html: { class: 'input-lg' }
            = f.hidden_field :lat
            = f.hidden_field :lng
          .col-sm-6 = f.input :state, required: true, as: :string, input_html: { class: 'input-lg' }
          .col-sm-6 = f.input :zipcode, required: true, input_html: { class: 'input-lg' }
          .col-sm-6 = f.input :phone, required: false, input_html: { class: 'input-lg' }
    .col-md-3
      .panel.panel-default
        .panel-heading
          .pull-left
            h3 General Info
          .pull-right
            = f.submit "Save", class: "btn btn-primary btn-solid p-y-0", style: "margin-top: -6px;"
          .clearfix
        hr.m-b-0.m-t-1
        .panel-content-wrapper.fixedheight_receiver
          .col-sm-12= f.input :annual_revenue_goal, as: :string, input_html: { value: f.object.annual_revenue_goal.to_i }
          .col-sm-12= f.input :risk_tolerance, include_blank: I18n.t('simple_form.placeholders.business.risk_tolerance'), collection: Business::RISK_TOLERANCE_OPTIONS, input_html: { class: 'input-lg js-select' }
          .col-sm-12= f.input :time_zone, include_blank: t('simple_form.placeholders.specialist.time_zone'), input_html: { class: 'input-lg js-select' }
          .clearfix
    .clearfix
    .col-md-3
      .panel.panel-default.m-x-0.m-y-0
        .panel-heading
          .pull-left
            h3 Expertise
          .pull-right
            = f.submit "Save", class: "btn btn-primary btn-solid p-y-0", style: "margin-top: -6px;"
          .clearfix
        hr.m-b-0.m-t-1
        .panel-content-wrapper.tasks-widget.products.fullheight
          .choices.padded-checkboxes.specialist_sub_industries
            - Industry.sorted.each do |industry|
              - industry.sub_industries_specialist.split("\r\n").each_with_index do |sub_ind, i|
                .col-sm-12.m-b-1
                  input id="sub_industries_id_#{industry.id}_#{i}" type="checkbox" name="sub_industry_ids[]" value=("#{industry.id}_#{i}") checked=(current_specialist.sub_industries.nil? ? false : current_specialist.sub_industries&.include?(sub_ind))
                  label for="sub_industries_id_#{industry.id}_#{i}"
                    span style="display: inline-block;" = sub_ind
          .clearfix
    .col-md-3.p-x-0
      .panel.panel-default.m-x-0.m-y-0
        .panel-heading
          .pull-left
            h3 Former Regulator
          .pull-right
            = f.submit "Save", class: "btn btn-primary btn-solid p-y-0", style: "margin-top: -6px;"
          .clearfix
        hr.m-b-0.m-t-1
        .panel-content-wrapper.tasks-widget.products.fullheight
          .choices.padded-checkboxes.specialist_sub_jurisdictions
            .col-sm-12.m-b-1
              input id="no_sub_jurs" type="checkbox"
              label for="no_sub_jurs"
                span No
            - Jurisdiction.sorted.each do |jurisdiction|
              - jurisdiction.sub_jurisdictions_specialist.split("\r\n").each_with_index do |sub_jur, i|
                - state_modifier = (jurisdiction.name == "USA" && sub_jur == "State") || (jurisdiction.name == "Canada" && sub_jur == "State")
                .m-b-1 style=("float: left; width: 30%;" if state_modifier) class=(state_modifier ? "col-sm-6" : "col-sm-12")
                  input id="sub_jurisdictions_id_#{jurisdiction.id}_#{i}" type="checkbox" name="sub_jurisdiction_ids[]" value=("#{jurisdiction.id}_#{i}") checked=(current_specialist.sub_jurisdictions.nil? ? false : current_specialist.sub_jurisdictions.include?(sub_jur))
                  label for="sub_jurisdictions_id_#{jurisdiction.id}_#{i}"
                    span = sub_jur
                - if state_modifier
                  .p-l-2 style="float: left; width: 70%; height: 37px; margin-top: -10px;"
                    - if jurisdiction.name == "USA" && sub_jur == "State"
                      = f.input :jurisdiction_states_usa, collection: State.fetch_all_usa, placeholder: "Choose USA States", input_html: { class: 'input-lg js-select', multiple: true }, label: false
                    - if jurisdiction.name == "Canada" && sub_jur == "State"
                      = f.input :jurisdiction_states_canada, collection: State.fetch_all_canada, placeholder: "Choose Canada States", input_html: { class: 'input-lg js-select', multiple: true }, label: false
            .col-sm-12.m-b-1#sub_jur_other
              input id="sub_jurisdiction_other_enabled" type="checkbox" name="sub_jurisdiction_other_enabled" value="0_1"
              label for="sub_jurisdiction_other"
                span Other
              input.m-l-2 id="sub_jurisdiction_other" name="sub_jurisdiction_other" type="text"
          .clearfix
    .col-md-6
      .panel.panel-default.m-x-0.m-y-0
        .panel-heading
          h3 Confirmed Skills
          .clearfix
        hr.m-b-0.m-t-1
        .panel-content-wrapper.tasks-widget.products.fullheight#skills_tagcloud

javascript:
  var specialist_profile_edit_page = true;
  var confirmed_skills = #{raw current_specialist.skills.collect(&:name)};
- if current_specialist.sub_jurisdictions.blank?
  javascript:
    var no_sub_jurs_force = true;
