- Project::Decorator.decorate(@project).tap do |project|
  - content_for :header, render('projects/header', project: project)

  .row
    .col-xs-12.col-sm-4.col-md-3
      .panel.panel-default.profile-info
        .panel-heading
          h3 About the Business
        .panel-body
          = link_to business_path(project.business) do
            - if policy(project).view_full_business? && project.business.logo
              .logo= image_tag(project.business.logo_url(:thumb), class: 'img-responsive')
            - else
              .logo.text-center= image_tag 'icon-specialist.png', size: '104x104'
          = link_to business_path(project.business) do
            h3.text-center= policy(project).public_business_info(:business_name) || project.business.industries.first.name
            .text-center= project.business.render_stars

          br

          .list-icon
            .item
              i.icon-location-pin
              span= project.business.city_state_country
            .item
              i.icon-briefcase
              span= project.business.industries.map(&:name).join(', ')
            .item
              i.icon-globe
              span= project.business.jurisdictions.map(&:name).join(', ')
            .item
              i.icon-users
              span #{project.business.employees} Employees
            - if policy(project).view_full_business? && project.business.website.present?
              .item
                i.icon-link
                span= link_to project.business.website_short, project.business.website_url, target: '_blank'
            - if policy(project).view_full_business? && project.business.linkedin_link.present?
              .item
                i.fa.fa-linkedin-square
                span= link_to 'LinkedIn Profile', project.business.linkedin_url, target: "_blank"

          .m-t-2
            .text-center.text-uppercase.small= link_to 'View Profile', project.business, class: 'link', target: '_blank'

    .col-xs-12.col-sm-8.col-md-9
      .panel.panel-default.panel-padded
        .panel-heading
          h3 Key Details & Applicant Prerequisites
        .panel-body
          .row= render 'projects/attributes', project: project

      .panel.panel-default.panel-padded
        .panel-heading
          h3 #{project.one_off? ? 'Project' : 'Job' } Description
        .panel-body= simple_format project.description

      - if project.key_deliverables.present?
        .panel.panel-default.panel-padded
          .panel-heading
            h3 Key Deliverables
          .panel-body= project.key_deliverables_list

      - if project.specialist.blank?
        .panel.panel-default.panel-padded
          .panel-heading
            h3
              a.no-link name="q-a" Q & A
          .panel-body
            - if current_specialist.present?
              = simple_form_for Question.new, authenticity_token: true, url: project_questions_path(project_id: project.id) do |f|
                = f.input :text, as: :text, label: false, input_html: {class: 'di-b', rows: 2, placeholder: 'Enter question here'}
                = f.submit 'Ask Question', class: 'btn btn-primary btn-md p-x-3', data: {disable_with: 'Sending...'}

            - project.questions.order('id DESC').each do |question|
              .question-and-answer
                .question-text
                  span.q-or-a Q&nbsp;
                  = simple_format(question.text)
                  .question-or-answer-timestamp
                    span= question.created_at.in_time_zone(current_business_or_specialist.tz).strftime("%b %d, %Y at %I:%M %P")
                    span &nbsp;
                    - id_string = "question" + question.id.to_s
                    span= link_to image_tag('flag-icon.png'), '#', {class: 'flag-link', data: {content: id_string}}
                    = content_tag :div, {class: 'flag-form', data: {content: id_string}} do
                      .modal-wrapper
                        .modal-fake.gray.clearfix
                          button.close.close-absolute data-dismiss="modal" type="button"
                            .icon.maxicons1-exit
                          h3.text-uppercase.text-center.m-b-3.p-x-5 Report Post
                          .checkbox-lg
                            = simple_form_for Flag.new, authenticity_token: true, url: submit_flag_url(current_user, project) do |f|
                              = f.hidden_field :question_id, value: question.id
                              = f.input :reason, as: :check_boxes,
                                        collection: [%w(Inappropriate inappropriate), %w(Harassment harassment), %w(Spam spam)], label: false
                              .text-center
                                = f.submit 'Submit', class: 'btn btn-primary btn-md p-x-3 m-t-2'

                - if question.answer.present?
                  .answer-text
                    span.q-or-a A&nbsp;
                    = simple_format(question.answer.text)
                    .question-or-answer-timestamp
                      span= question.answer.created_at.in_time_zone(current_business_or_specialist.tz).strftime("%b %d, %Y at %I:%M %P")
                      span &nbsp;
                      - if current_user.business != project.business
                        - id_string = "answer" + question.answer.id.to_s
                        span= link_to image_tag('flag-icon.png'), '#', {class: 'flag-link', data: {content: id_string}}
                        = content_tag :div, {class: 'flag-form', data: {content: id_string}} do
                          .modal-wrapper
                            .modal-fake.gray.clearfix
                              button.close.close-absolute data-dismiss="modal" type="button"
                                .icon.maxicons1-exit
                              h3.text-uppercase.text-center.m-b-3.p-x-5 Report Post
                              .checkbox-lg
                                = simple_form_for Flag.new, authenticity_token: true, url: project_flags_path(project_id: project.id) do |f|
                                  = f.hidden_field :answer_id, value: question.answer.id
                                  = f.input :reason, as: :check_boxes,
                                            collection: [%w(Inappropriate inappropriate), %w(Harassment harassment), %w(Spam spam)], label: false
                                  .text-center
                                    = f.submit 'Submit', class: 'btn btn-primary btn-md p-x-3 m-t-2'
                - if current_user.business == project.business && question.answer.blank?
                  = simple_form_for Answer.new, authenticity_token: true, url: business_project_answers_path(project_id: project.id) do |f|
                    = f.input :text, as: :text, label: false, input_html: {class: 'di-b', rows: 2, placeholder: 'Enter answer here'}
                    = f.hidden_field :question_id, value: question.id
                    = f.submit 'Answer Question', class: 'btn btn-primary btn-md p-x-3', data: {disable_with: 'Sending...'}
