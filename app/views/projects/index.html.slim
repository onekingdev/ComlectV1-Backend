- content_for :html_head do
  script src="https://maps.googleapis.com/maps/api/js?key=#{ENV.fetch('GOOGLE_PLACES_API_KEY')}&libraries=places"

.row
  .td.col-xs-12.col-sm-4.col-md-3
    = simple_form_for @search, method: :get, remote: true, wrapper: :inline_form, url: projects_path do |f|
      .panel.panel-default
        .panel-body.panel-body-thin
          = f.hidden_field :page
          = f.input :project_type, as: :radio_pills, collection: [%w(Projects one-off), %w(Jobs full-time)], btn_class: 'btn-sm btn-default', hint: false, wrapper_html: { class: 'm-b-1 m-t-3' }
          = f.input :sort_by, collection: Project::Search::SORT_BY, input_html: { class: 'input-lg js-select input-gray' }, wrapper_html: { class: 'm-b-1' }
          = f.input :keyword, input_html: { class: 'input-lg input-gray' }, wrapper_html: { class: 'm-b-3' }

      .panel.panel-default
        .panel-heading
          h3 Filters
        .panel-body.panel-body-thin
          = f.input :location_type, wrapper: false, collection: Project::LOCATIONS, include_blank: 'Location', input_html: { class: 'js-select input-lg' }
          .specific-location.collapse.p-t-1.range-slider-fixed-from
            = f.text_field :location, class: 'input-lg form-control js-place-autocomplete', data: { self: 'full', lat: '#project_search_lat', lng: '#project_search_lng' }
            = f.hidden_field :lat
            = f.hidden_field :lng

            label.tt-u.m-t-2 Within (Miles)
            = f.text_field :location_range, class: 'form-control js-range-slider', data: { min: 0, max: 100, from_fixed: true, type: 'double', input_values_separator: ';', hide_min_max: true }

          = f.input :industry_ids,
            as: :grouped_select,
            collection: grouped_collection_for_select(Industry.sorted),
            group_method: :all,
            group_label_method: :label,
            placeholder: I18n.t('simple_form.placeholders.project_search.industry_ids'),
            input_html: { class: 'input-lg js-select input-gray m-t-1', multiple: true }

          = f.input :jurisdiction_ids,
            as: :grouped_select,
            collection: grouped_collection_for_select(Jurisdiction.sorted),
            group_method: :all,
            group_label_method: :label,
            placeholder: I18n.t('simple_form.placeholders.project_search.jurisdiction_ids'),
            input_html: { class: 'input-lg js-select input-gray', multiple: true }

        .panel-heading.m-t-2.m-b-1
          h3 Yrs. Compliance Exp.
        .panel-body.panel-body-thin
          = f.text_field :experience, class: 'form-control js-range-slider', data: { min: Project::Search::MIN_EXPERIENCE, max: Project::Search::MAX_EXPERIENCE, type: 'double', input_values_separator: ';', hide_min_max: true, max_postfix: '+' }

        .panel-heading.m-b-1
          h3 Project Value
        .panel-body.panel-body-thin
          = f.text_field :project_value, class: 'form-control js-range-slider', data: { min: 0, max: 50_000, type: 'double', input_values_separator: ';', hide_min_max: true, prefix: '$', step: 1000, keyboard_step: 1000, force_edges: true, prettify_separator: ',', max_postfix: '+' }

        .panel-heading
          span.checkbox.checkbox-lg.checkbox-right
            = f.check_box :regulator
            = f.label :regulator, 'Former Regulator', class: 'tt-u d-b'

        .panel-body.panel-body-thin
          .skills
            = f.input :skill_selector, input_html: { class: 'input-lg input-gray', autocomplete: "off", data: { source: api_skills_path, max: 10 } }, wrapper_html: { class: 'm-b-0' }
            ul.skills-required

          .text-center.small.m-b-2
            input.reset.text-uppercase type="reset" value="Reset Filters"

  .col-xs-12.col-sm-8.col-md-9.search-results
    = render 'results', results: @search.results
